/*
 * -------------------------------------------------
 *  nxf-pbassembly Nextflow config file
 * -------------------------------------------------
 */
nextflow.enable.dsl=2
process.collectTaskMetrics = false

/***********************************************************************
 * Default pipeline params
 ***********************************************************************/
params {
  publish_dir       = "./results"
  input             = "./data/samplesheet2.csv"
  input_type        = "bam"
  cpus              = 12
  genome_size       = null
  run_hifiasm       = true
  run_flye          = true
  run_prokka        = true
  run_metaeuk       = true           // Parameter for metaeuk
  run_barrnap       = true           // Parameter for barrnap
  protein_reference = "NA"           // Default protein reference
  
  // Parameters for error handling
  exit_on_all_assemblers_failed = true  // Set to false to continue even if all assemblers fail
  
  // Resource management parameters
  max_memory = 128.GB
  max_cpus = 16
  max_time = '72.h'
}

/***********************************************************************
 * Base process config (applies to all processes)
 ***********************************************************************/
process {
  // Global error strategy settings
  errorStrategy = { task.exitStatus == 130 || task.exitStatus == 137 ? 'retry' : 'ignore' }
  maxRetries = 1
  
  // For critical processes that should fail the pipeline if they fail
  withName: 'BAM2FASTQ|FASTQC' {
    errorStrategy = 'terminate'
    container = 'biocontainers/fastqc:v0.11.9_cv8'
  }
  
  // QUAST processes
  withName: 'QUAST|QUAST_HIFIASM|QUAST_FLYE' {
    container = 'staphb/quast:latest'
  }

  // FASTQC process
  withName: FASTQC {
    container = 'biocontainers/fastqc:v0.11.9_cv8'
  }

  // HiFiAsm process
  withName: ASSEMBLY_HIFIASM {
    container = 'dnalinux/hifiasm:0.20.0'
    // Keep errorStrategy = 'ignore' for assemblers to allow the pipeline to continue
    errorStrategy = 'ignore'
  }

  // Flye process
  withName: ASSEMBLY_FLYE {
    container = 'staphb/flye:latest'
    // Keep errorStrategy = 'ignore' for assemblers to allow the pipeline to continue
    errorStrategy = 'ignore'
  }

  // BAM2FASTQ process
  withName: BAM2FASTQ {
    container = 'staphb/samtools:latest'
  }

  // GFA_TO_FASTA process
  withName: GFA_TO_FASTA {
    container = 'nanozoo/gfatools:0.5--66ed940'
  }

  // PROKKA process
  withName: PROKKA {
    container = 'quay.io/biocontainers/prokka:1.14.6--pl5321hdfd78af_4'
  }

  // METAEUK process:
  withName: METAEUK {
    container = 'gayathriguduru/metaeuk:latest'
  }

  // BARRNAP process
  withName: BARRNAP {
    container = 'biocontainers/barrnap:v0.9dfsg-1-deb_cv1'
  }

  /*
   * EXTRACT_16S process:
   *   - Runs with system Python (no container)
   */
  withName: EXTRACT_16S {
    container = null
    beforeScript = "export PATH=/usr/bin:\$PATH"
  }
}

/***********************************************************************
 * Execution profiles
 ***********************************************************************/
profiles {
  /*
   * SLURM HPC environment:
   *   - Uses Apptainer for container processes.
   *   - Globally disables conda & docker.
   *   - Re-enables conda for the METAEUK process.
   */
  slurm {
    process {
      executor = 'slurm'
      queue    = 'devel'
      cpus     = 32
      memory   = '60 GB'
      time     = '60h'

      //withName: METAEUK {
        //conda.enabled = true
        //container = null
      //}
    }

    apptainer {
      enabled    = true
      autoMounts = true
      cacheDir   = "work/apptainer"
    }

    docker.enabled      = false
    conda.enabled       = false
    singularity.enabled = false
  }

  /*
   * Local execution profile (for testing):
   *   - Executor is local.
   *   - Docker is enabled.
   */
  local {
    process {
      executor = 'local'
      cpus = { check { it <= Runtime.runtime.availableProcessors() } ? params.cpus : 1 }
      memory = '16 GB'
    }

    docker.enabled      = true
    apptainer.enabled   = false
    conda.enabled       = false
    singularity.enabled = false
  }
}

/***********************************************************************
 * Environment variables
 ***********************************************************************/
env {
  PS_PATH = "/bin/ps"
  PATH    = "$baseDir/bin:/bin:/usr/bin:/usr/local/bin:$PATH"
}

/***********************************************************************
 * Pipeline manifest info
 ***********************************************************************/
manifest {
  name             = 'nxf-pbassembly'
  homePage         = 'https://github.com/Gayathri-Guduru/nxf-pbassembly'
  description      = 'Nextflow pipeline for single isolate assembly from PacBio HiFi reads'
  nextflowVersion  = '23.10.1'
  version          = 1.0
}

// Error handling for workflow level failures
tower {
  enabled = false   // Set to true if using Nextflow Tower
  accessToken = null
  workspaceId = null
}

// Retry management for resources
executor {
  $slurm {
    queueSize = 100
    submitRateLimit = '10 sec'
    pollInterval = '30 sec'
    retry {
      enabled = true
      maxRetries = 3
      waitMinutes = 2
    }
  }
  $local {
    cpus = Runtime.runtime.availableProcessors()
    memory = '16 GB'
    retry {
      enabled = true
      maxRetries = 2
      waitMinutes = 1
    }
  }
}
